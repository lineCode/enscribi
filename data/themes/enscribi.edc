// Define parts used for adding keys
#define KEY(NAME, LABEL, REL1X, REL1Y, REL2X, REL2Y) \
            part { \
                name: "key/"NAME; \
                mouse_events: 0; \
                description { state: "default" 0.0; \
                    rel1 { \
                        relative: REL1X REL1Y; \
                        offset:   0   0; \
                    } \
                    rel2 { \
                        relative: REL2X REL2Y; \
                        offset:   -1  -1; \
                    } \
                } \
            } \
            part { name: "key/"NAME"/button_image"; \
                mouse_events: 0; \
                description { state: "default" 0.0; \
                    rel1.to: "key/"NAME"/e.swallow.content"; \
                    rel1.offset: -3 -3; \
                    rel2.to_x: "key/"NAME"/e.swallow.content"; \
                    rel2.to_y: "key/"NAME; \
                    rel2.offset: 2 2; \
                    image { \
                        normal: "bt_basew.png"; \
                        border: 7 7 7 7; \
                    } \
                    fill.smooth: 0; \
                } \
                description { state: "active" 0.0; \
                    inherit: "default" 0.0; \
                    image { \
                        normal: "bt_base2.png"; \
                        border: 7 7 7 7; \
                    } \
                } \
            } \
            part { name: "key/"NAME"/content_clip"; \
                description { state: "default" 0.0; \
                    color: 0 0 0 255; \
                    rel1.to: "key/"NAME"/button_image"; \
                    rel2.to: "key/"NAME"/button_image"; \
                } \
                description { state: "active" 0.0; \
                    inherit: "default" 0.0; \
                    color: 255 255 255 255; \
                } \
            } \
            part { \
                name: "key/"NAME"/e.swallow.content"; \
                clip_to: "key/"NAME"/content_clip"; \
                mouse_events: 1; \
                description { state: "default" 0.0; \
                    rel1 { \
                        to: "key/"NAME; \
                        relative: 0.0 0.0; \
                        offset:   3   3; \
                    } \
                    rel2 { \
                        to: "key/"NAME; \
                        relative: 1.0 1.0; \
                        offset:   -4  -4; \
                    } \
                } \
                description { state: "selected" 0.0; \
                    inherit: "default" 0.0; \
                    rel1 { \
                        to: "key/"NAME; \
                        relative: -0.5 -2.0; \
                        offset:   3   3; \
                    } \
                    rel2 { \
                        to: "key/"NAME; \
                        relative: 1.5 0.0; \
                        offset:   -4  -4; \
                    } \
                } \
            } \
            part { name: "key/"NAME"/e.text.label"; \
                type: TEXT; \
                clip_to: "key/"NAME"/content_clip"; \
                mouse_events: 0; \
                scale: 1; \
                description { state: "default" 0.0; \
                    rel1.to: "key/"NAME"/e.swallow.content"; \
                    rel2.to: "key/"NAME"/e.swallow.content"; \
                    color: 255 255 255 255; \
                    text { \
                        text: LABEL; \
                        font: "Sans";  \
                        size: 10; \
                        min: 1 1; \
                    } \
                } \
                description { state: "selected" 0.0; \
                    inherit: "default" 0.0; \
                    text { \
                        size: 24; \
                    } \
                } \
            }
#define KEY_ICON(NAME, ICON) \
            part { name: "key/"NAME"/icon"; \
                mouse_events: 0; \
                clip_to: "key/"NAME"/content_clip"; \
                description { state: "default" 0.0; \
                    aspect: 1.0 1.0; \
                    aspect_preference: BOTH; \
                    rel1 { \
                        to: "key/"NAME"/e.swallow.content"; \
                        relative: 0.5 0.5; \
                        offset:   -9  -9; \
                    } \
                    rel2 { \
                        to: "key/"NAME"/e.swallow.content"; \
                        relative: 0.5 0.5; \
                        offset:   9  9; \
                    } \
                    image { \
                        normal: ICON; \
                        border: 7 7 7 7; \
                    } \
                } \
            }
#define KEY_OVER(NAME) \
            part { name: "key/"NAME"/over1"; \
                mouse_events: 0; \
                description { state: "default" 0.0; \
                    rel1.to: "key/"NAME"/button_image"; \
                    rel2.to: "key/"NAME"/button_image"; \
                    rel2.relative: 1.0 0.5; \
                    image { \
                        normal: "bt_hilightw.png"; \
                        border: 7 7 7 0; \
                    } \
                    fill.smooth: 0; \
                } \
            } \
            part { name: "key/"NAME"/over2"; \
                mouse_events: 1; \
                description { state: "default" 0.0; \
                    rel1.to: "key/"NAME"/button_image"; \
                    rel2.to: "key/"NAME"/button_image"; \
                    image { \
                        normal: "bt_shine.png"; \
                        border: 7 7 7 7; \
                    } \
                    fill.smooth: 0; \
                } \
                description { state: "disabled" 0.0; \
                    inherit:  "default" 0.0; \
                    visible: 0; \
                } \
            }
#define KEY_PROGRAMS(NAME) \
            program { name: "key/"NAME"/down"; \
                signal: "mouse,down,1"; \
                source: "key/"NAME"/over2"; \
                action: STATE_SET "selected" 0.0; \
                target: "key/"NAME"/e.swallow.content"; \
                target: "key/"NAME"/e.text.label"; \
            } \
            program { name: "key/"NAME"/up"; \
                signal: "mouse,up,1"; \
                source: "key/"NAME"/over2"; \
                action: STATE_SET "default" 0.0; \
                transition: DECELERATE 0.25; \
                target: "key/"NAME"/e.swallow.content"; \
                target: "key/"NAME"/e.text.label"; \
            }
#define KEY_KEYSYM(NAME, KEYSYM) \
            program { name: "key/"NAME"/pressed"; \
                signal: "mouse,down,1"; \
                source: "key/"NAME"/over2"; \
                action: SIGNAL_EMIT "key,pressed" KEYSYM; \
            }

collections {
    group { name: "enscribi/kbd";
        images {
            image: "k_tab.png" COMP;
            image: "k_grad.png" COMP;
            image: "bt_base2.png" COMP;
            image: "bt_basew.png" COMP;
            image: "bt_hilightw.png" COMP;
            image: "bt_shine.png" COMP;
            image: "enter.png" COMP;
            image: "backspace.png" COMP;
        }
        parts {
            part {	  name: "bg";
                mouse_events: 0;
                description { state: "default" 0.0;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                    image.normal: "k_grad.png";
                    fill {
                        smooth: 0;
                        size {
                            relative: 0 1.0;
                            offset: 36 0;
                        }
                    }
                }
            }
            part {	  name: "bg/top";
                mouse_events: 0;
                description { state: "default" 0.0;
                    image.normal: "k_tab.png";
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 0.0;
                        offset: -1 15;
                    }
                    fill {
                        smooth: 0;
                    }
                }
            }
            part {	  name: "input/border";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color: 255 255 255 255;
                    //color: 222 148 69 255;
                    rel1 {
                        to: "input/1";
                        relative: 0.0 0.0;
                        offset: -1 -1;
                    }
                    rel2 {
                        to: "input/3";
                        relative: 1.0 1.0;
                        offset: 0 0;
                    }
                }
            }
            part { name: "input/1";
                type: SWALLOW;
                description { state: "default" 0.0;
                    aspect: 1.0 1.0;
                    aspect_preference: HORIZONTAL;
                    rel1 {
                        relative: 0.03 0.1;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 0.30 0.9;
                        offset: -1 -1;
                    }
                }
            }
            part { name: "input/2";
                type: SWALLOW;
                description { state: "default" 0.0;
                    aspect: 1.0 1.0;
                    aspect_preference: HORIZONTAL;
                    rel1 {
                        to: "input/1";
                        relative: 1.0 0.0;
                        offset: -1 0;
                    }
                    rel2 {
                        to: "input/1";
                        relative: 2.0 1.0;
                        offset: -2 -1;
                    }
                }
            }
            part { name: "input/3";
                type: SWALLOW;
                description { state: "default" 0.0;
                    aspect: 1.0 1.0;
                    aspect_preference: HORIZONTAL;
                    rel1 {
                        to: "input/2";
                        relative: 1.0 0.0;
                        offset: -1 0;
                    }
                    rel2 {
                        to: "input/2";
                        relative: 2.0 1.0;
                        offset: -2 -1;
                    }
                }
            }
            KEY("select", "Lang", 0.87, 0.1, 0.97, 0.25)
            //KEY_ICON("select", "select.png")
            KEY_OVER("select")
            KEY("backspace", "", 0.87, 0.3, 0.97, 0.45)
            KEY_ICON("backspace", "backspace.png")
            KEY_OVER("backspace")
            KEY("enter", "", 0.87, 0.5, 0.97, 0.65)
            KEY_ICON("enter", "enter.png")
            KEY_OVER("enter")
            KEY("send", ">>", 0.87, 0.7, 0.97, 0.85)
            //KEY_ICON("send", "send.png")
            KEY_OVER("send")
        }
        programs {
            KEY_PROGRAMS("backspace")
            KEY_KEYSYM("backspace", "BackSpace")
            KEY_PROGRAMS("enter")
            KEY_KEYSYM("enter", "Return")
            KEY_PROGRAMS("select")
            KEY_PROGRAMS("send")
            program { name: "key/send/pressed";
                signal: "mouse,down,1";
                source: "key/send/over2";
                action: SIGNAL_EMIT "result,send" "key/send";
            }
        }
    }

#define RESULT_CHOICE(NAME, REL1X, REL1Y, REL2X, REL2Y) \
part {	  name: "result/choice/"NAME"/bg"; \
    type: RECT; \
    mouse_events: 0; \
    clip_to: "result/choice/clip"; \
    description { state: "default" 0.0; \
        color_class: "kanji"; \
        rel1 { \
            relative: REL1X REL1Y; \
            offset: 1 1; \
        } \
        rel2 { \
            relative: REL2X REL2Y; \
            offset: -1 -1; \
        } \
    } \
} \
part { name: "result/choice/"NAME; \
    type: TEXT; \
    effect: NONE; \
    clip_to: "result/choice/clip"; \
    description { state: "default" 0.0; \
        color:  0 0 0 255; \
        text { \
            text:        ""; \
            font:        "Sans"; \
            size:         28; \
            align:       0.5 0.5; \
        } \
        rel1 { \
            relative: REL1X REL1Y; \
            offset: 1 1; \
        } \
        rel2 { \
            relative: REL2X REL2Y; \
            offset: -1 -1; \
        } \
    } \
}
#define RESULT_CHOICE_CLICKED(NAME) \
program { name: "result/choice/"NAME",clicked"; \
    signal:     "mouse,down,1"; \
    source:     "result/choice/"NAME; \
    script { \
        set_state(PART:"result/choice/clip", "default", 0.0); \
        new buf[256]; \
        get_text(PART:"result/choice/"NAME, buf, 256); \
        set_text(PART:"result", buf); \
    } \
}

    group { name: "enscribi/input";
        images {
            image: "corner.png" COMP;
            image: "x.png" COMP;
        }
        color_classes {
            color_class {
                name:  "canvas/bg";
                color: 255 243 206 255;
            }
            color_class {
                name:  "canvas/border";
                color: 222 148 69 255;
            }
            color_class {
                name:  "canvas/bar";
                color: 255 220 164 255;
            }
            color_class {
                name:  "kanji";
                color: 255 220 164 255;
            }
        }
        script {
            public message(Msg_Type:type, id, ...) {
                if ((type == MSG_STRING_SET) && (id == 1)) {
                    new buf[5];

                    getsarg(2, buf, 5);
                    set_text(PART:"result", buf);
                    set_text(PART:"result/choice/0", buf);
                    getsarg(3, buf, 100);
                    set_text(PART:"result/choice/1", buf);
                    getsarg(4, buf, 100);
                    set_text(PART:"result/choice/2", buf);
                    getsarg(5, buf, 100);
                    set_text(PART:"result/choice/3", buf);
                    getsarg(6, buf, 100);
                    set_text(PART:"result/choice/4", buf);
                    getsarg(7, buf, 100);
                    set_text(PART:"result/choice/5", buf);
                    getsarg(8, buf, 100);
                    set_text(PART:"result/choice/6", buf);
                    getsarg(9, buf, 100);
                    set_text(PART:"result/choice/7", buf);
                }
            }
        }
        parts {
            part {	  name: "border";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color_class: "canvas/border";
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            part {	  name: "bg";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color_class: "canvas/bg";
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 1 1;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -2 -2;
                    }
                }
            }
            part {	  name: "bg/hbar";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color_class: "canvas/bar";
                    rel1 {
                        to: "bg";
                        relative: 0.0 0.5;
                        offset: 0 0;
                    }
                    rel2 {
                        to: "bg";
                        relative: 1.0 0.5;
                        offset: -1 0;
                    }
                }
            }
            part {	  name: "bg/vbar";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color_class: "canvas/bar";
                    rel1 {
                        to: "bg";
                        relative: 0.5 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        to: "bg";
                        relative: 0.5 1.0;
                        offset: 0 -1;
                    }
                }
            }
            part { name: "canvas";
                type: SWALLOW;
                description { state: "default" 0.0;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            part { name: "result/clip";
                type: RECT;
                mouse_events: 1;
                description { state: "default" 0.0;
                    visible: 0;
                    align: 0 0;
                    rel1 {
                        to: "bg";
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        to: "bg";
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
                description { state: "visible" 0.0;
                    inherit:  "default" 0.0;
                    visible:   1;
                }
            }
            part { name: "result/bg";
                type: RECT;
                mouse_events: 1;
                clip_to: "result/clip";
                description { state: "default" 0.0;
                    visible: 1;
                    align: 0 0;
                    color_class: "kanji";
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            part { name: "result/choose";
                clip_to: "result/clip";
                description { state: "default" 0.0;
                    align: 0 0;
                    color_class: "canvas/border";
                    rel1 {
                        relative: 0.67 0.67;
                        offset: 1 1;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                    image.normal: "corner.png";
                }
            }
            part { name: "result";
                type: TEXT;
                effect: NONE;
                clip_to: "result/clip";
                mouse_events: 0;
                description { state: "default" 0.0;
                    align: 0 0;
                    color: 0 0 0 255;
                    text {
                        text:        "";
                        font:        "Sans";
                        size:         60;
                        align:       0.5 0.5;
                        //fit:         1 1; // Fit is very slow for japanese kanji...
                    }
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            part {	  name: "result/choice/clip";
                type: RECT;
                mouse_events: 1;
                description { state: "default" 0.0;
                    visible: 0;
                    align: 0 0;
                    rel1 {
                        to: "bg";
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        to: "bg";
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
                description { state: "visible" 0.0;
                    inherit:  "default" 0.0;
                    visible: 1;
                }
            }
            part {	  name: "result/choice/bg";
                type: RECT;
                clip_to: "result/choice/clip";
                description { state: "default" 0.0;
                    align: 0 0;
                    color_class: "canvas/border";
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            RESULT_CHOICE("0", 0.00, 0.00, 0.33, 0.33)
            RESULT_CHOICE("1", 0.33, 0.00, 0.67, 0.33)
            RESULT_CHOICE("2", 0.67, 0.00, 1.00, 0.33)
            RESULT_CHOICE("3", 0.00, 0.33, 0.33, 0.67)
            RESULT_CHOICE("4", 0.33, 0.33, 0.67, 0.67)
            RESULT_CHOICE("5", 0.67, 0.33, 1.00, 0.67)
            RESULT_CHOICE("6", 0.00, 0.67, 0.33, 1.00)
            RESULT_CHOICE("7", 0.33, 0.67, 0.67, 1.00)
            part { name: "result/clear/bg";
                type: RECT;
                clip_to: "result/choice/clip";
                description { state: "default" 0.0;
                    color_class: "kanji";
                    rel1 {
                        relative: 0.67 0.67;
                        offset: 1 1;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                }
            }
            part { name: "result/clear";
                clip_to: "result/choice/clip";
                description { state: "default" 0.0;
                    rel1 {
                        relative: 0.67 0.67;
                        offset: 1 1;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -1 -1;
                    }
                    image.normal: "x.png";
                }
            }
        }
        programs {
            program {
                name:       "result,show";
                signal:     "canvas,matches,updated";
                source:     "canvas";
                action:      STATE_SET "visible" 0.0;
                target:     "result/clip";
                in:          0.0 0.0;
            }
            program { name: "result,hide";
                signal:     "result,finished";
                source:     "result";
                action:      STATE_SET "default" 0.0;
                target:     "result/clip";
                target:     "result/choice/clip";
                in:          0.0 0.0;
            }
            program { name: "result,clicked";
                signal:     "mouse,down,1";
                source:     "result/bg";
                action:      SIGNAL_EMIT "result,finished" "result";
            }
            program { name: "result/choose,clicked";
                signal:     "mouse,down,1";
                source:     "result/choose";
                action:      STATE_SET "visible" 0.0;
                target:     "result/choice/clip";
                in:          0.0 0.0;
            }
            program { name: "result/clear,clicked";
                signal:     "mouse,down,1";
                source:     "result/clear";
                script {
                    set_text(PART:"result", "");
                    set_state(PART:"result/clip", "default", 0.0);
                    set_state(PART:"result/choice/clip", "default", 0.0);
                }
            }
            RESULT_CHOICE_CLICKED("0")
            RESULT_CHOICE_CLICKED("1")
            RESULT_CHOICE_CLICKED("2")
            RESULT_CHOICE_CLICKED("3")
            RESULT_CHOICE_CLICKED("4")
            RESULT_CHOICE_CLICKED("5")
            RESULT_CHOICE_CLICKED("6")
            RESULT_CHOICE_CLICKED("7")
        }
    }
}

